[{"D:\\JavaScript\\filmsDb\\Brenar\\src\\index.js":"1","D:\\JavaScript\\filmsDb\\Brenar\\src\\components\\app\\index.js":"2","D:\\JavaScript\\filmsDb\\Brenar\\src\\components\\app\\app.js":"3","D:\\JavaScript\\filmsDb\\Brenar\\src\\components\\app-add-form\\index.js":"4","D:\\JavaScript\\filmsDb\\Brenar\\src\\components\\app-header\\index.js":"5","D:\\JavaScript\\filmsDb\\Brenar\\src\\components\\app-footer\\index.js":"6","D:\\JavaScript\\filmsDb\\Brenar\\src\\components\\film-list\\index.js":"7","D:\\JavaScript\\filmsDb\\Brenar\\src\\components\\app-add-form\\app-add-form.js":"8","D:\\JavaScript\\filmsDb\\Brenar\\src\\components\\app-header\\app-header.js":"9","D:\\JavaScript\\filmsDb\\Brenar\\src\\components\\app-footer\\app-footer.js":"10","D:\\JavaScript\\filmsDb\\Brenar\\src\\components\\film-list\\film-list.js":"11","D:\\JavaScript\\filmsDb\\Brenar\\src\\components\\film-list-item\\index.js":"12","D:\\JavaScript\\filmsDb\\Brenar\\src\\components\\film-list-item\\film-list-item.js":"13"},{"size":281,"mtime":1607887268200,"results":"14","hashOfConfig":"15"},{"size":45,"mtime":1607886744778,"results":"16","hashOfConfig":"15"},{"size":4377,"mtime":1609292708299,"results":"17","hashOfConfig":"15"},{"size":62,"mtime":1607890543643,"results":"18","hashOfConfig":"15"},{"size":64,"mtime":1607887129432,"results":"19","hashOfConfig":"15"},{"size":64,"mtime":1607896233940,"results":"20","hashOfConfig":"15"},{"size":63,"mtime":1607894859304,"results":"21","hashOfConfig":"15"},{"size":2080,"mtime":1609251752997,"results":"22","hashOfConfig":"15"},{"size":247,"mtime":1609251751719,"results":"23","hashOfConfig":"15"},{"size":580,"mtime":1609292709510,"results":"24","hashOfConfig":"15"},{"size":1748,"mtime":1609292710988,"results":"25","hashOfConfig":"15"},{"size":74,"mtime":1607894857662,"results":"26","hashOfConfig":"15"},{"size":1301,"mtime":1609292710088,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"u2mihv",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},"D:\\JavaScript\\filmsDb\\Brenar\\src\\index.js",[],["57","58"],"D:\\JavaScript\\filmsDb\\Brenar\\src\\components\\app\\index.js",[],"D:\\JavaScript\\filmsDb\\Brenar\\src\\components\\app\\app.js",["59","60"],"import React, {useState, useCallback, memo} from 'react'\r\n\r\nimport AppHeader from '../app-header'\r\nimport AddForm from '../app-add-form'\r\nimport FilmList from '../film-list'\r\nimport AppFooter from '../app-footer'\r\n\r\nimport './app.scss'\r\n\r\nconst defaultFilmList = [\r\n  {id: 1, name: \"Terminator\", description: \"I'll be back\", genre: \"action\", rating: \"10\", isChecked: false},\r\n  {\r\n    id: 2,\r\n    name: \"Lord of the ring\",\r\n    description: \"Frodo give back the ring\",\r\n    genre: \"adventure\",\r\n    rating: \"9\",\r\n    isChecked: false\r\n  },\r\n  {id: 3, name: \"American pie\", description: \"Don't eat the pie\", genre: \"comedy\", rating: \"10\", isChecked: false},\r\n]\r\n\r\nconst App = () => {\r\n  const [table, setTable] = useState(defaultFilmList)\r\n  const [checkedLines, setCheckedLines] = useState([])\r\n  const [temp, setTemp] = useState('')\r\n  const [changeTempTableData, setChangeTempTableData] = useState([])\r\n\r\n  const addFilm = newFilm => {\r\n    setTable([...table, {id: table.length + 1, ...newFilm, isChecked: false}])\r\n  }\r\n\r\n  const handleAscending = fieldName => {\r\n    setTable(prevTable => {\r\n      return prevTable.sort((a, b) => {\r\n        if (a[fieldName] <= b[fieldName]) {\r\n          return -1\r\n        } else if (a[fieldName] > b[fieldName]) {\r\n          return 1\r\n        } else {\r\n          return 0\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  const handleDescending = fieldName => {\r\n    setTable(prevTable => {\r\n      return prevTable.sort((a, b) => {\r\n        if (a[fieldName] < b[fieldName]) {\r\n          return 1\r\n        } else if (a[fieldName] > b[fieldName]) {\r\n          return -1\r\n        } else {\r\n          return 0\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  const handleCheckLine = lineId => {\r\n    setCheckedLines(prevCheckedLines => {\r\n      const currentIndex = prevCheckedLines.indexOf(lineId)\r\n      if (currentIndex !== -1) {\r\n        setChangeTempTableData([...changeTempTableData].filter(f => f.id !== lineId))\r\n        return [...prevCheckedLines].filter(f => f !== lineId)\r\n      } else {\r\n        setChangeTempTableData([...changeTempTableData, ...table.filter(f => f.id === lineId)])\r\n        return [...prevCheckedLines, lineId]\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleChangeLine = () => {\r\n    const lines = changeTempTableData\r\n    setTable(prevTable => {\r\n      prevTable.map((item, key) => {\r\n        lines.map((line) => {\r\n          if (prevTable[key].id === line.id) {\r\n            prevTable[key].name = line.name\r\n            prevTable[key].description = line.description\r\n            prevTable[key].genre = line.genre\r\n            prevTable[key].rating = line.rating\r\n            prevTable[key].isChecked = false\r\n          }\r\n        })\r\n      })\r\n      return prevTable\r\n    })\r\n    setCheckedLines([])\r\n  }\r\n\r\n  const handlers = {handleAscending, handleDescending, handleCheckLine, setChangeTempTableData}\r\n\r\n  const changeTemp = (newTemp => {\r\n    setTemp(newTemp)\r\n  })\r\n\r\n  const searchFilms = ((table, temp) => {\r\n    if (temp.length === 0) {\r\n      return table\r\n    }\r\n\r\n    return table.filter(film => {\r\n      return film.name.toLowerCase().includes(temp.toLowerCase()) ||\r\n        film.description.toLowerCase().includes(temp.toLowerCase()) ||\r\n        film.genre.toLowerCase().includes(temp.toLowerCase()) ||\r\n        film.rating.toLowerCase().includes(temp.toLowerCase())\r\n    })\r\n  })\r\n\r\n  const visibleFilms = searchFilms(table, temp)\r\n\r\n  const handleDeleteLines = useCallback(() => {\r\n    setTable([...table].filter(f => !checkedLines.includes(f.id)))\r\n    setCheckedLines([])\r\n  }, [checkedLines, setTable, setCheckedLines, table])\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <AppHeader/>\r\n      <div className=\"add-form\">\r\n        <AddForm handleAddData={addFilm}/>\r\n      </div>\r\n      <FilmList tableData={visibleFilms} checkedLines={checkedLines} {...handlers} />\r\n      <AppFooter\r\n        changeTemp={changeTemp}\r\n        onRemoveLines={handleDeleteLines}\r\n        onChangeLine={handleChangeLine}\r\n        changeTempTableData={changeTempTableData}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst areEqual = (prevProps, nextProps) => {\r\n  if(JSON.stringify(prevProps.changeTempTableData) !== JSON.stringify(nextProps.changeTempTableData)) {\r\n    return true\r\n  }\r\n\r\n  if(JSON.stringify(prevProps) !== JSON.stringify(nextProps)){\r\n    return false\r\n  } else {\r\n    return true\r\n  }\r\n}\r\n\r\nexport default memo(App, areEqual);","D:\\JavaScript\\filmsDb\\Brenar\\src\\components\\app-add-form\\index.js",[],"D:\\JavaScript\\filmsDb\\Brenar\\src\\components\\app-header\\index.js",[],"D:\\JavaScript\\filmsDb\\Brenar\\src\\components\\app-footer\\index.js",[],"D:\\JavaScript\\filmsDb\\Brenar\\src\\components\\film-list\\index.js",[],"D:\\JavaScript\\filmsDb\\Brenar\\src\\components\\app-add-form\\app-add-form.js",[],"D:\\JavaScript\\filmsDb\\Brenar\\src\\components\\app-header\\app-header.js",[],"D:\\JavaScript\\filmsDb\\Brenar\\src\\components\\app-footer\\app-footer.js",[],"D:\\JavaScript\\filmsDb\\Brenar\\src\\components\\film-list\\film-list.js",[],"D:\\JavaScript\\filmsDb\\Brenar\\src\\components\\film-list-item\\index.js",[],"D:\\JavaScript\\filmsDb\\Brenar\\src\\components\\film-list-item\\film-list-item.js",["61"],"import React from 'react';\r\nimport './film-list-item.scss';\r\n\r\nconst FilmListItem = ({filmData, handleCheckLine, checkedLines, setChangeTempTableData}) => {\r\n\r\n    const handleChangeData = (value, lineId, fieldName) => {\r\n        setChangeTempTableData(prevData => {\r\n            console.log(prevData)\r\n            prevData.map((line, key) => {\r\n                if(line.id === lineId) {\r\n                    prevData[key][fieldName] = value\r\n                }\r\n            })\r\n\r\n            return prevData\r\n        })\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n          {Object.keys(filmData).map((item, key) => {\r\n            if(item === 'isChecked'){\r\n              return <td key={key}><input type=\"checkbox\" value={false} onClick={() => handleCheckLine(filmData.id)}/></td>\r\n            } else {\r\n              if(checkedLines.includes(filmData.id) && item !== 'id'){\r\n                return <td key={key}>\r\n                    <textarea onChange={event => handleChangeData(event.target.value, filmData.id, item)}>\r\n                        {filmData[item]}\r\n                    </textarea>\r\n                </td>\r\n              } else {\r\n                return <td key={key}>{filmData[item]}</td>\r\n              }\r\n            }\r\n          })}\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default FilmListItem;",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":77,"column":33,"nodeType":"68","messageId":"69","endLine":77,"endColumn":35},{"ruleId":"66","severity":1,"message":"67","line":78,"column":26,"nodeType":"68","messageId":"69","endLine":78,"endColumn":28},{"ruleId":"66","severity":1,"message":"67","line":9,"column":38,"nodeType":"68","messageId":"69","endLine":9,"endColumn":40},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]